[
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "A Visual Journey through the Women’s FIFA World Cup",
    "section": "Introduction",
    "text": "Introduction\nThe 2019 Women’s FIFA World Cup in France saw unprecedented interest in the tournament, with viewership, attendance, and digital engagement reaching record heights across the globe. Four years later, the Women’s FIFA World Cup is set to happen this July in New Zealand and Australia. Despite progress being made, significant inequality persists between men’s and women’s football. Through our data gathering process, we recognized how challenging it is to find concise information and digestible visualizations on women’s football compared with men’s football. Therefore, we intend to highlight this disparity through our first set of visualizations. These visualizations will cover a range of topics including popular phrases over time, overall spending differences between World Cups historically, and more.\nAs we approach the Women’s World Cup, we are especially motivated and inspired to gain a deeper understanding of various football characteristics surrounding women’s football. We hope to take you on a visual journey into the past and present of women’s football with our second set of visualizations. This set of visualizations will delve into winning trends over time, game statistics on the field, player attributes, and more relating soley to women’s FIFA. By examining these visualizations, we aim to gain important insights into what is in store for the 2023 Women’s World Cup."
  },
  {
    "objectID": "index.html#the-fifa-world-cup-a-uniting-global-event",
    "href": "index.html#the-fifa-world-cup-a-uniting-global-event",
    "title": "A Visual Journey through the Women’s FIFA World Cup",
    "section": "The FIFA World Cup: A Uniting Global Event",
    "text": "The FIFA World Cup: A Uniting Global Event\nThe FIFA World Cup is typically regarded as the largest sporting events in the world with extensive media attention. What is the public discussing regarding FIFA and the World Cup?\n\nPopular Phrases: An Insight into the FIFA World Cup\nIn the past couple of years, Twitter has become an international communication hub for a plethora of topics ranging from international politics to the latest sports news. Twitter’s rise has impacted how official news sources interact with the public, with accounts such as ESPN being able to update fans on the latest scores immediately. Because of this, it was determined that it would be a great source to find text data from three official FIFA news sources to grasp precisely what the FIFA World Cup is. Tweets were pulled from three main accounts, FIFAWorldCup, FIFAWCC (FIFA Women’s World Cup), and FIFAcom. Through Twitter API, tweets were pulled from as close to the past FIFA event as possible. This was done to see what keywords and phrases were being put out by these official accounts to their fans. Through this data collection, it was hoped that the overarching question ‘What exactly is FIFA?’ could be answered.\n\n\nCode\nimport pandas as pd \nimport json\nfrom wordcloud import WordCloud\nimport plotly.graph_objs as go\nimport warnings\nwarnings.simplefilter('ignore')\n#function that will create each trace\n#below function was modified from the following link: \n#   https://github.com/PrashantSaikia/Wordcloud-in-Plotly\n#changes were made so multiple wordclouds could be made from frequencies, as well as the location of the words remaining static, as well as color. \ndef plotly_wordcloud(text, word_dict):\n    wc = WordCloud(max_font_size=100).generate_from_frequencies(text) \n    word_list=[]\n    freq_list=[]\n    for word_info in wc.layout_:\n        word_list.append(word_info[0][0])\n        freq_list.append(word_info[0][1])\n\n    # get the positions\n    x = []\n    y = []\n    color_list = []\n    #look in the dictonary to get the locations and colors \n    for i in word_list:\n        position = word_dict[i]['position']\n        color_list.append(word_dict[i]['color'])\n        x.append(float(position[0]))\n        y.append(float(position[1]))\n    # get the relative occurence frequencies\n    new_freq_list = [freq*100 for freq in freq_list]\n    trace = go.Scatter(x=x, \n                       y=y, \n                       textfont = dict(size=new_freq_list,\n                                       color=color_list),\n                       textposition =  'middle center',\n                       hoverinfo='text',\n                       hovertext=['{0}{1}'.format(w, f) for w, f in zip(word_list, freq_list)],\n                       mode='text',  \n                       text=word_list, \n                       visible=False\n                      )\n    return trace\n\nvec_df = pd.read_csv(\"../data/FIFAWorldCupvectorized.csv\", index_col=0)\nvec_FIFAcom = pd.read_csv(\"../data/FIFAcomvectorized.csv\", index_col=0)\ndf_vector = pd.read_csv(\"../data/FIFAWCCvectorized.csv\", index_col=0)\n# Load the JSON file\nwith open('../data/dict_1.json') as f:\n    dict_1 = json.load(f)\n# Load the JSON file\nwith open('../data/dict_2.json') as f:\n    dict_2 = json.load(f)\n# Load the JSON file\nwith open('../data/dict_3.json') as f:\n    dict_3 = json.load(f)\n\n#need to generate a trace for each column \ndate_1 = list(vec_df.columns)\ndate_2 = list(vec_FIFAcom.columns)\ndate_3 = list(df_vector.columns)\n\ndataframes = [vec_df, vec_FIFAcom, df_vector]\nwdict_list = [dict_1, dict_2, dict_3]\n\n# initialize the fig \nfig = go.Figure()\nfor i, dataframe in enumerate(dataframes): \n    #creating the traces for the current twitter account: \n    for k in range(len(dataframe.columns)-1): \n        text = dataframe.iloc[:, k]\n        word_dict = wdict_list[i]\n        trace = plotly_wordcloud(text, word_dict)\n        fig.add_trace(trace)\n\n\nfig.data[0].visible = True\nfig.update_layout(template=\"plotly_white\")\nfig.update_layout(xaxis=dict(showline=False, zeroline=False),\n                  yaxis=dict(showline=False, zeroline=False))\n\n\n\nmatrix_false = []\nfor i in range(len(fig.data)):\n    x = [False] * len(fig.data)\n    x[i] = True\n    matrix_false.append(x)\n\n#creating the dictonaries: \ndic_sliders = {}\nstep_count = 0\naccount_dict = [('FIFAWorldCup', len(date_1)-1), ('FIFAcom',len(date_2)-1),('FIFAWWC',len(date_3)-1)]\n\nfor val, j in account_dict:\n    steps = []\n    for k in range(j):\n        step = {'method': 'update',\n        'args': [{'visible': matrix_false[step_count]}]}\n        steps.append(step)\n        step_count += 1\n    dic_sliders[val] = [dict(active=0, currentvalue={\"prefix\": \"Date: \"}, pad={\"t\": 50}, steps=steps)]\n\n\nfig.update_layout(sliders = dic_sliders['FIFAWorldCup']\n         ,xaxis=dict(\n        range=[-1,7],\n        tickvals=[],\n        ticktext=[]\n        ),\n    yaxis=dict(\n        range=[-2, 8],\n        tickvals=[],\n        ticktext=[]\n        )\n)\nfig.update_layout(\n    updatemenus=[\n        dict(\n            buttons=list([\n                dict(\n                    label=\"FIFAWorldCup\",\n                    method=\"update\",\n                    args=[{\"visible\": matrix_false[0]}, {\"sliders\" : dic_sliders['FIFAWorldCup']}] ,\n                ),\n                dict(\n                    label='FIFAcom',\n                    method=\"update\",\n                    args=[{\"visible\": matrix_false[23]}, {\"sliders\" : dic_sliders['FIFAcom']}] ,\n                ), \n                dict(\n                    label= 'FIFAWWC',\n                    method=\"update\",\n                    args=[{\"visible\": matrix_false[57]}, {\"sliders\" : dic_sliders['FIFAWWC']}] ,\n                )\n            ]),\n            direction=\"down\",\n            showactive=True,\n            pad={\"r\": 1, \"t\": 1},\n            x=0,\n            xanchor=\"left\",\n            y=2,\n            yanchor=\"top\"\n        ),\n    ],\n    plot_bgcolor = \"#F1F0DA\",\n    paper_bgcolor = \"#F1F0DA\",\n    title = \"Key Words From Official Tweets During the 2022 World Cup\",\n    title_x = 0.5,\n     annotations=[\n        dict(\n            x = 0,\n            y = 0,\n            showarrow = False,\n            text = 'Data Source: Tweets Pulled From @FIFAWorldCup, @FIFAWWC, @FIFAcom [5]',\n            xref = \"paper\",\n            yref = \"paper\",\n            font = dict(\n                size = 10,\n                color = \"black\"\n            )\n        )\n    ],\n    width=900,\n    height=500,\n\n)\n\nfig.show()\n\n\n\n\n                                                \nFigure 1: Time Series World Cloud\n\n\n\nAn interactive word cloud was created using Plotly, where the drop-down menu allows the user to specify what account they want to focus on the words, while the slider shows the accounts’ main phrases as the FIFA 2022 World Cup took place. The user would see many vital terms such as Qatar, medal, world, and goal, as well as other phrases to show that this event is truly an international experience. On specific days, the user can see which players are considered key, such as Messi and Mbappe."
  },
  {
    "objectID": "index.html#a-game-of-inequality-highlighting-gender-disparity-in-fifa",
    "href": "index.html#a-game-of-inequality-highlighting-gender-disparity-in-fifa",
    "title": "A Visual Journey through the Women’s FIFA World Cup",
    "section": "A Game of Inequality: Highlighting Gender Disparity in FIFA",
    "text": "A Game of Inequality: Highlighting Gender Disparity in FIFA\nEven today, the inequality between men’s and women’s football persists especially in the areas of funding, coverage, salary, infrastructure, and more. With the visualizations in this section, we hope to not only explore but emphasize this disparity.\n\nFinancial Spending: How Men’s and Women’s FIFA Differ\nQatar made headlines with an exorbitant amount spent with the latest World Cup. However, it is common for countries to splurge when selected for the Men’s FIFA World Cup. With the intake in tourism and other factors, hosting the World Cup has its economic advantages. The plot below attempts to map this relationship between the amount a country spent and the total, average, and highest number of people who attended the World Cup.\n\n\nCode\nimport pandas as pd\nimport altair as alt\nimport warnings\nwarnings.simplefilter('ignore')\ndf = pd.read_csv('../data/finan_data_long.csv')\ndf2 = pd.read_csv('../data/finan_data.csv', index_col=0)\ndf2['country_year'] = df2['country'] + ',' + df2['year'].astype(str)\ndf['country_year'] = df['country'] + ',' + df['year'].astype(str)\ndf3 = df2[df2['country'] != 'Qatar']\nselection = alt.selection_single(fields=['country_year'],name='Random')\n#color selection for bar plot\nlist_country = ['Qatar,2022','France,2019','Russia,2018','Canada,2015','Brazil,2014','Germany ,2011','South Africa,2010','China,2007', 'Germany ,2006','USA,2003','S. Korea/Japan,2002', 'USA,1999', 'France,1998','USA,1996']\nlist_country.reverse()\ncolor = alt.condition(selection,\n                      alt.value('#009643'),\n                      alt.value('lightgray'), \n                      )\n#bar plot for the amount spent (including Qatar)\nbar1 = (alt.Chart(df2).mark_bar(size = 20)\n       .encode(\n        y=alt.Y('amount:Q'),\n        x=alt.X('country_year:N', sort = list_country),\n        color = color\n        ).add_selection(selection)).properties(width=400,height=565, title = {\n                                    'text' : [\"Spending By Each Country\"],\n                                    \"fontSize\": 18,\n                                    'subtitle': [\"\",\"\"], })\n#bar customization \nbar1.encoding.x.title = 'Year and Country FIFA Was Held'\nbar1.encoding.y.title = 'Money Spent (Billions USD)'\n\n#the second bar plot not including Qatar: \nbar2 = (alt.Chart(df3).mark_bar(size = 20)\n       .encode(\n        y=alt.Y('amount:Q'),\n        x=alt.X('country_year:N', sort = list_country),\n        color = color\n        ).add_selection(selection)).properties(width=400,height=565, title = {\n      \"text\": [\"Spending By Each Country\"] ,\n      \"fontSize\": 18,\n      \"subtitle\": [\"(Not Including Qatar)\",\"*units different than previous plot\"], \n    })\n\n#bar customization \nbar2.encoding.x.title = 'Year and Country FIFA Was Held'\nbar2.encoding.y.title = 'Money Spent (Billions)*'\n\n#color selection 2 for the bubble plot\ncolor2 = alt.condition(selection,\n                      alt.Color('Gender:N', scale = alt.Scale(range = ['#0099FF', '#FD5109'])),\n                      alt.value('lightgray'))\n\n#creating the selection box\ncategory_select = alt.selection_single(fields=['type'], bind=alt.binding_select(options=df['type'].unique()))\n\n#creating the circles: \nplot = alt.Chart(df).mark_circle().encode(\n    x=alt.X('x:Q', axis = None),\n    y=alt.Y('y:Q', axis = None),\n    size=alt.Size('area:Q', scale=alt.Scale(domain=[0, 0.8], range=[0, 130000]), legend=None),\n    color=color2,\n    tooltip=['country:N', 'year:N', 'attendance:Q'], \n).transform_filter(\n     category_select\n).properties(\n    width=750,\n    height=565, \n    title = {\n    \"text\": [\"\",\"Attendance for Each Country\", \"\"],\n    \"fontSize\": 16\n    }\n)\n\n#creating the text so the bubbles are labeled\ntext = alt.Chart(df).mark_text(align='center', baseline='middle', color = '#F1F0DA', fontSize= 14).encode(\n    x=alt.X('x:Q', axis = None),\n    y=alt.Y('y:Q', axis = None),\n    text='country:N'\n).transform_filter(\n   category_select\n)\n\nsource = alt.Chart().mark_text(align='center', baseline='middle', fontSize= 14).encode().properties(\n    title = {\n    'text': [\"\", \"\", \"\", \"\", \"Data Source: Wikipedia [4] and FIFA Financial Reports [6]\"],\n    'fontWeight': 'normal',\n    'fontSize': 12}\n)\n\nbar_comb = alt.concat(bar1, bar2)\n\n# create chart1 without configuration settings - this is so i can work the color selection/linked\n#chart1 is the combined plot and text\nchart1 = alt.layer(plot, text)\n\n#the final chart, this is so we are will add all the configurations here\nchart = alt.VConcatChart(vconcat=[bar_comb, chart1, source], \n                         title=alt.TitleParams(text=['Country Spending Compared to Game Attendance', \"\"], anchor='middle', fontSize=24),\n                         background = '#F1F0DA',\n                         center = True,\n                         spacing = 10,\n                         padding = {\"left\": 40, \"top\": 30, \"right\": 40, \"bottom\": 60},\n                         config={\n                             'view': {\n                                 'stroke': '#F1F0DA',\n                                 'fill': '#F1F0DA'\n                             },\n                             'axis': {\n                                 'grid': False, \n                                 'labelFontSize': 14,\n                                 'titleFontSize': 15,\n                                 'labelAngle' : -45\n\n                             },\n                             'legend': {\n                                'titleFontSize' :16,\n                                'labelFontSize': 12,\n                                'orient': 'bottom'\n                             }\n                         })\n#adding the selection so that way the blob/text will be changed, we add it to the final plot\nchart.add_selection(category_select)\n\n\n\n\n\n\nFigure 2: A Linked View on FIFA Financial Spending Based on Attendance\n\n\n\nThe ‘total’ option reflects the sum attendance of all the stadium events, ‘average’ shows the number of people compared to the number of events, and ‘highest’ is the top number of people at one stadium during the overall tournament. Although we see that in the total attendance, Men’s FIFA is higher when looking at the average and highest, Men’s and Women’s FIFA are closer. However, when comparing the amount spent with the average and highest attendance, there is a massive discrepancy between the genders. Although one might attribute this maybe each country wanting to spend only a set amount no matter the gender, it is seen that France held the Men’s FIFA in 1998 and spent 2 billion on preparing for the games, while for the Women’s World Cup in 2019, they spent less than one-fourth of that. The goal of this visualization is so that the viewer can see the gender disparity between the two World Cups. To accurately understand the attendance, hover over the circles to see the number of people.\n\n\nThe Pay Gap: Comparing Men’s and Women’s Player Salaries\nOne of the first areas that comes to mind when people usually think about gender disparity in not only football, but most other sports as well, is the pay gap. In the visualization below, we hope to bring light to how drastic the difference in salary is between the best men and women’s football players just in the last year. We have also included the table used for the plot below.\n\n\nCode\n# Read in packages\nimport pandas as pd\nimport altair as alt\nimport numpy as np\nimport warnings\nwarnings.simplefilter('ignore')\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Get the data\nsalariestable = pd.read_excel(\"../data/salary_comparison.xlsx\")\nsalariestable.columns = [x.title() for x in list(salariestable.columns)]\n# Convert all columns to strings (used for text later)\nsalariestable = salariestable.astype(str)\nsalariestable.index += 1 \n# Change column names\nfrom IPython.display import Markdown\nfrom tabulate import tabulate\nMarkdown(tabulate(\n  salariestable, \n  headers = [\"Player Name\", \"Salary\", \"Year\", \"Gender\", \"Country\"]\n))\n\n\n\n\nTable 1: Salaries of the Top Nine Men and Female Football Players 2022-2023\n\n\n\nPlayer Name\nSalary\nYear\nGender\nCountry\n\n\n\n\n1\nCristiano Ronaldo\n200000000\n2022\nMale\nPortugal\n\n\n2\nKylian Mbappé\n110000000\n2022\nMale\nFrance\n\n\n3\nLionel Messi\n65000000\n2022\nMale\nArgentina\n\n\n4\nNeymar\n55000000\n2022\nMale\nBrazil\n\n\n5\nMohamed Salah\n35000000\n2022\nMale\nEgypt\n\n\n6\nErling Haaland\n35000000\n2022\nMale\nNorway\n\n\n7\nRobert Lewandowski\n27000000\n2022\nMale\nPoland\n\n\n8\nEden Hazard\n27000000\n2022\nMale\nBelgium\n\n\n9\nAndres Iniesta\n25000000\n2022\nMale\nSpain\n\n\n10\nSam Kerr\n513000\n2023\nFemale\nAustralia\n\n\n11\nAlex Morgan\n450000\n2023\nFemale\nUnited States\n\n\n12\nMagan Rapinoe\n447000\n2023\nFemale\nUnited States\n\n\n13\nJulie Ertz\n430000\n2023\nFemale\nUnited States\n\n\n14\nAda Hegerberg\n425000\n2023\nFemale\nNorway\n\n\n15\nMarta Vieira\n400000\n2023\nFemale\nBrazil\n\n\n16\nAmandine Henry\n394000\n2023\nFemale\nFrance\n\n\n17\nWendie Renard\n392000\n2023\nFemale\nFrance\n\n\n18\nChristine Sinclair\n380000\n2023\nFemale\nCanada\n\n\n\n\n\n\n\n\nCode\n# Load packages\nimport pandas as pd\nimport altair as alt\nimport numpy as np\nimport warnings\nwarnings.simplefilter('ignore')\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Get the data\nsalaries = pd.read_excel(\"../data/salary_comparison.xlsx\")\nsalaries.columns = [x.title() for x in list(salaries.columns)]\nfemale_salaries = salaries[salaries[\"Gender\"] == \"Female\"]\nmale_salaries = salaries[salaries[\"Gender\"] == \"Male\"]\n\n# Prepare the data\nfemale_salaries.reset_index(drop = True, inplace = True)\nmale_salaries.Salary = male_salaries.Salary.astype(int)\nfemale_salaries.Salary = female_salaries.Salary.astype(int)\n\n# Make our custom color scheme\ncolor_scheme = [\"#009643\", \"#CB4349\"]\n\n# Add selection fields\nselection = alt.selection_single(fields = [\"Player\"])\n\nboth = alt.Chart(salaries).mark_bar().encode(\n    x = alt.X(\"Salary:Q\",\n            title = \"Salary (USD)\",\n            sort = \"descending\",\n            scale = alt.Scale(domain = (200500000, 0))),\n    y = alt.Y(\"Player:N\", axis = alt.Axis(title = \"Player Name\", orient = \"left\"), sort = alt.Sort(field = \"Salary\", order = \"descending\")),\n    color = alt.Color(\"Salary:Q\", scale = alt.Scale(range = color_scheme))\n).properties(\n    title = [\"Pay Gap Between the Highest Paid Men's and Women's Football Players\"], \n    width = 900, \n    height = 225\n)\n\ntext1 = both.mark_text(\n    align = \"left\",\n    baseline = \"middle\",\n    dx = 1\n).encode(\n    text = \"Country:N\"\n)\n\nboth_final = (both + text1)\n\n# Add caption for when salaries were collected\nboth_final = alt.concat(both_final).properties(title = alt.TitleParams(\n        [\"**Note: men's salaries are from December 2022 and women's salaries are from March 2023**\", \" \"],\n        baseline = \"top\",\n        orient = \"top\",\n        anchor = \"end\",\n        fontWeight = \"normal\",\n        fontSize = 11\n    ))\n\n\n# Men's chart\nmen_chart = alt.Chart(male_salaries).mark_bar().encode(\n    x = alt.X(\"Salary:Q\",\n            title = \"Salary (USD)\",\n            sort = \"descending\",\n            scale = alt.Scale(domain = (0, 230000000))),\n    y = alt.Y(\"Player:N\", axis = alt.Axis(title = \"Player\"), sort = alt.Sort(field = \"Salary\", order = \"descending\")),\n    color = alt.Color(\"Salary:Q\", scale = alt.Scale(range = color_scheme))\n).properties(\n    title = [\"Highest Paid Male Football Players\"], \n    width = 390, \n    height = 225\n)\n\ntextm = men_chart.mark_text(\n    align = \"right\",\n    baseline = \"middle\",\n    dx = -3\n).encode(\n    text = \"Country:N\"\n)\n\nmen_chart_final = (men_chart + textm)\n\nwomen_chart = alt.Chart(female_salaries).mark_bar().encode(\n    x = alt.X(\"Salary:Q\",\n            title = \"Salary (USD)\",\n            sort = \"descending\",\n            scale = alt.Scale(domain = (600000, 0))),\n    y = alt.Y(\"Player:N\", axis = alt.Axis(title = \"Player Name\", orient = \"right\"), sort = alt.Sort(field = \"Salary\", order = \"descending\")),\n    color = alt.Color(\"Salary:Q\", scale = alt.Scale(range = color_scheme))\n).properties(\n    title = [\"Highest Paid Female Football Players (ZOOMED IN)\"], \n    width = 390, \n    height = 225\n)\n\ntextw = women_chart.mark_text(\n    align = \"left\",\n    baseline = \"middle\",\n    dx = 3\n).encode(\n    text = \"Country:N\"\n)\n\nwomen_chart_final = (women_chart + textw)\n\n# Add caption with data source\nwomen_chart_final = alt.concat(women_chart_final).properties(title = alt.TitleParams(\n        [\" \", \" \", \"Data Source: Statista [9] and AS USA [10]\"],\n        baseline = \"bottom\",\n        orient = \"bottom\",\n        anchor = \"end\",\n        fontWeight = \"normal\",\n        fontSize = 11\n    ))\n\nbottom = alt.hconcat(men_chart_final , women_chart_final, spacing = 0)\n\nfinal = alt.vconcat(both_final, bottom)\nfinal.configure(background = \"#F1F0DA\").configure_title(fontSize = 15) \n\n\n\n\n\n\nFigure 3: Comparison of Top Men’s and Women’s Player Salaries in the Last Year\n\n\n\nFrom the two plots on top, it is clear that women’s player salaries are drastically less than the men’s. When plotted on the same scale, we are not even able to see any bars show up on the women’s side because their salaries are so low in comparison. To put it into perspective, the highest paid female player, Sam Kerr, made 47 times less this last year than the 9th highest paid male player, Andres Iniesta. While this pay gap has recieved a lot of attention in recent years, there is, unfortunately, much more that needs to be done to bridge this inequality. On other important note to make is how difficult it was to find recent data on female players’ salaries. It is crucial to give more attention to this disparity in order to facilitate meaningful change.\n\n\nInfrastructure: Exploring Match Locations for Women’s Tournaments\nRegarding the many different tournaments leading to the FIFA World Cup, there is a particular trend in the location selection for said tournaments. There are three main tournaments preceding the FIFA World Cup, which is considered to be the main event for women’s football. These three tournaments are:\n\nFA Women’s Super League\nNational Women’s Soccer League (NWSL)\nUEFA Women’s Euro\n\nFirst, we want to see which countries and specific stadiums are preferred for which competitions. This will act as the basis for the next step, which is identifying which countries have the most considerable amount of players with the highest rankings.\nFor this visualization, we look at the period between 2018 and 2022. FA Women’s Super Leauge has the most data by having the different stadium locations for 2018, 2019, 2020, and 2021. Already by the name, we can expect the National Women’s Soccer League to have preferred stadiums in the United States when hosting the FIFA World Cup. In fact, the FIFA World Cup location changes the most, as it depends on the host country. For example, in 2019, the FIFA World Cup was hosted in France, with its main stadium being the Parc Olympique Lyonnais, also called the Groupama Stadium in Décines-Charpieu, France.\n\n\nCode\n#IMPORTING LIBRARIES\nimport plotly.graph_objects as go\nimport plotly.io as pio\nimport numpy as np\nimport pandas as pd\npio.renderers.default = \"plotly_mimetype+notebook_connected\"\n\n# Importing data\ndf = pd.read_csv(\"../data/clean_matches.csv\")\n\n# CHANGE DATA TYPE OF YEAR TO STRING SO IT CAN BE ITERABLE\ndf[\"year\"] = df[\"year\"].astype(\"str\")\n\n# Create subsets of data to create traces\ndf1_2018 = pd.DataFrame(df[(df['competition_name'] == 'FA Womens Super League') & (df['year'] == '2018')])\ndf1_2019 = pd.DataFrame(df[(df['competition_name'] == 'FA Womens Super League') & (df['year'] == '2019')])\ndf1_2020 = pd.DataFrame(df[(df['competition_name'] == 'FA Womens Super League') & (df['year'] == '2020')])\ndf1_2021 = pd.DataFrame(df[(df['competition_name'] == 'FA Womens Super League') & (df['year'] == '2021')])\ndf2 = pd.DataFrame(df[df['competition_name']=='NWSL'])\ndf3 = pd.DataFrame(df[df['competition_name']=='UEFA Womens Euro'])\ndf4 = pd.DataFrame(df[df['competition_name']=='Womens World Cup'])\n\n\n\n\n# TRACE-1: \ntrace1 = (  \n    go.Scattergeo(  \n        lat=df1_2018['lat'],\n        lon=df1_2018['long'],\n        text=df1_2018['text'],\n        mode='markers',\n        marker=dict(\n            size=df['freq'],\n            color='#FCC92B',\n            opacity=0.8,\n            symbol='circle'),\n        name = \"FA Women's Super League 2018\", \n        visible=True))\n\n# TRACE-2: \ntrace2 = (  \n    go.Scattergeo(  \n        lat=df1_2019['lat'],\n        lon=df1_2019['long'],\n        text=df1_2019['text'],\n        mode='markers',\n        marker=dict(\n            size=df['freq'],\n            color='#009643',\n            opacity=0.8,\n            symbol='circle'),\n        name = \"FA Women's Super League 2019\",\n        visible=True))\n\n# TRACE-3: \ntrace3 = (  \n    go.Scattergeo(  \n        lat=df1_2020['lat'],\n        lon=df1_2020['long'],\n        text=df1_2020['text'],\n        mode='markers',\n        marker=dict(\n            size=df['freq'],\n            color='#009AFE',\n            opacity=0.8,\n            symbol='circle'),\n        name = \"FA Women's Super League 2020\", \n        visible=True))\n\n\n# TRACE-4: \ntrace4 = (  \n    go.Scattergeo(  \n        lat=df1_2021['lat'],\n        lon=df1_2021['long'],\n        text=df1_2021['text'],\n        mode='markers',\n        marker=dict(\n            size=df['freq'],\n            color='#FF818D',\n            opacity=0.8,\n            symbol='circle'),\n        name = \"FA Women's Super League 2021\",\n        visible=True))\n\n# TRACE-5: \ntrace5 = (  \n    go.Scattergeo(  \n        lat=df2['lat'],\n        lon=df2['long'],\n        text=df2['text'],\n        mode='markers',\n        marker=dict(\n            size=df['freq'],\n            color='#FF5108',\n            opacity=0.8,\n            symbol='circle'),\n        name = \"National Women's Soccer League 2018\",\n        visible=True))\n\n# TRACE-6: \ntrace6 = (  \n    go.Scattergeo(  \n        lat=df3['lat'],\n        lon=df3['long'],\n        text=df3['text'],\n        mode='markers',\n        marker=dict(\n            size=df['freq'],\n            color='#8538B1',\n            opacity=0.8,\n            symbol='circle'),\n        name = \"UEFA Womens Euro 2022\",\n        visible=True))\n\n# TRACE-7: \ntrace7 = (  \n    go.Scattergeo(  \n        lat=df4['lat'],\n        lon=df4['long'],\n        text=df4['text'],\n        mode='markers',\n        marker=dict(\n            size=df['freq'],\n            color='#960505',\n            opacity=0.8,\n            symbol='circle'), \n        name = 'Womens World Cup 2019',\n        visible=True))\n\n# COMBINING TRACES\ntraces = [trace1, trace2, trace3, trace4, trace5, trace6, trace7]\n\n# INITIALIZE GRAPH OBJECT\nfig = go.Figure(data=traces)\n        \n# VARIABLES FOR BUTTON LOCATION\nbutton_height = 0.15\nx1_loc = 0.00\ny1_loc = 1\n\n# ADD ANNOTATION\nfig.add_annotation(\n    x=0,\n    y=0,\n    text='Data Source: StatsBomb [3], Wikipedia [4]',\n    showarrow=False,\n    visible=True,\n)\n\n\n#DROPDOWN MENUS\nfig.update_layout(\n    title = 'Location of Stadiums by Tournament and Number of Matches Played', \n    plot_bgcolor='#F1F0DA',\n    paper_bgcolor='#F1F0DA',\n    #annotations=annotations,\n    geo=dict(\n        lonaxis=dict(\n            range=[-130, 20],  \n        ),\n        lataxis=dict(\n            range=[20,65], \n        ),\n        showocean=True,\n        oceancolor='#F1F0DA'\n    ),\n    updatemenus=[\n        dict(\n            buttons=[\n                dict(\n                    label=\"FA Women's Super League\",           \n                    method=\"update\",                \n                     args=[{\"visible\": [True, True, True, True, False, False, False]}\n                    ]\n                     ),\n                dict(\n                    label=\"National Women's Soccer League 2018\",              \n                    method=\"update\",          \n                     args=[{\"visible\": [False, False, False, False, True, False, False]}\n                         ]\n                     ),\n                dict(\n                    label=\"UEFA Womens Euro 2022\",     \n                    method=\"update\",           \n                     args=[{\"visible\": [False, False, False, False, False, True, False]}\n                         ]\n                     ),    \n                dict(\n                    label=\"Womens World Cup 2019\",               \n                    method=\"update\",          \n                     args=[{\"visible\": [False, False, False, False, False, False, True]}\n                        ]\n                     )           \n            ],\n            direction=\"down\",\n            showactive=True,  \n            pad={\"r\": 10, \"t\": 10},  \n            x=x1_loc, \n            y=y1_loc,\n            xanchor=\"left\",  \n            yanchor=\"top\"\n        )\n    ],\n            width = 900\n)\n\n# SHOW FIGURE\nfig.show()\n\n\n\n\n                                                \nFigure 4: Stadium Location for Different Women’s Tournaments\n\n\n\nOverall, the stadium distribution for all these tournaments is more concentrated in Europe. The one obvious exception, as mentioned earlier, is the National Women’s Soccer League, which has matches strictly in the United States. Therefore, most stadiums are located on the east coast, with the highest number of matches played on the east coast. However, a few stadiums are also on the west coast, and very few are in the Midwest and South.\nFor the FA Women’s Super League, we can see that different stadiums were selected for various years; however, all of them are located in the United Kingdom, specifically England. The marker size represents the number of matches played at the stadium but for each tournament separately. If we were to compare the FA Women’s Super League with the National Women’s Soccer League, the marker sizes wouldn’t be comparable since the highest number of matches played at any National Women’s Soccer League Stadium is 5, while for the FA Women’s Super League is over 30. Therefore, we added a trace text, allowing the user to hover over any stadium and see how many matches were played there. For the FA Women’s League, we can see the four major football cities with major football clubs in England: London, Manchester, Liverpool, and Birmingham, where Manchester and Liverpool are close enough to overlap on the map. We can also see some stadiums west of London. We would expect these to be the other major cities in England, such as Southampton, Bath, or Bournemouth. Once we hover over these stadiums, we can see that many are in smaller towns that might not be as well known, which is also true for some of the UEFA Women’s Euro Tournament.\nSimilarly, like for the FA Women’s League and the UEFA Women’s Euro, we can see that the stadium distribution is highly concentrated in England. We can again see clubs in the London and Manchester/Liverpool area; however, yet again, once we hover over the separate stadiums, they are usually located in a smaller city near one of the major cities.\nFinally, for the FIFA Women’s World Cup, the host country changes every year, and in 2019, as mentioned before, France hosted the tournament. Therefore, we can see an equal distribution geographically across all of France. However, from the map, we can identify the stadiums around the major French cities, such as Paris in the north of France, Lyon in the central south, and Marseille on the south coastline. West of Marseille, we can also see Montpellier, which has one of France’s bigger stadiums. One of the interesting facts about the Women’s World Cup is that the research shows the Groupama Stadium in Décubes-Charpieu was supposed to be the main stadium for this tournament; however, only three matches have been played there. In comparison, seven matches have been played at the Parc de Princess stadium in Paris. Hovering over the stadiums, we see once again that many of the locations are near major cities, but only a few are actually in the city.\nTo conclude, when it comes to the location of the stadiums, there is a trend that many of the football stadiums are located close to large cities, but they are not the large stadiums, which will likely host the same tournaments only for men. There is a stigma regarding funding sports events for men and women. Women’s professional sports have been known to be underfunded, which can be one of the reasons for such choices of smaller and less fancy stadiums. However, this hypothesis requires further analysis."
  },
  {
    "objectID": "index.html#the-rise-of-womens-fifa-celebrating-the-players-and-their-skill",
    "href": "index.html#the-rise-of-womens-fifa-celebrating-the-players-and-their-skill",
    "title": "A Visual Journey through the Women’s FIFA World Cup",
    "section": "The Rise of Women’s FIFA: Celebrating the Players and their Skill",
    "text": "The Rise of Women’s FIFA: Celebrating the Players and their Skill\nNow that we have looked more generally into the FIFA World Cup and highlighted the persistent inequality between men’s and women’s football, we would like to focus solely on these women and their teams leading up to the 2023 Women’s World Cup. These visualizations will showcase the performance of the teams and players during past World Cup games, while specifically focusing on the key players set to participate in the upcoming tournament.\n\nGeographical Dynamics: Key Players for the 2023 Women’s World Cup\nAs previously discussed, the Women’s World Cup is a very high-scale and anticipated event this year. There are many players who are currently at the top of their game, and we would like to showcase these players. In the summer of 2022, ESPN came out with a list of the top 50 players to watch out for in this next World Cup [2]. The table below details the exact list from the article in the order that ESPN ranked the players. The choropleth globe below is based off of this competitive list to gain insight into which countries these key players will be representing this July.\n\n\nCode\nimport warnings\nwarnings.simplefilter('ignore')\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Read in packages\nimport pandas as pd\nimport numpy as np\nimport plotly\nimport requests\nimport plotly.graph_objects as go\nfrom plotly.offline import plot\nimport io\n# Read in data\ntop50table = pd.read_csv(\"../data/top50_women_espn.csv\")\n# Convert all columns to strings (used for text later)\ntop50table = top50table.astype(str)\ntop50table.index += 1 \n# Change column names\nfrom IPython.display import Markdown\nfrom tabulate import tabulate\nMarkdown(tabulate(\n  top50table, \n  headers=[\"Name\", \"Country\", \"Club\", \"Age\", \"Position\", \"Rank\"]\n))\n\n\n\n\nTable 2: ESPN’s List of the Top 50 Upcoming Players\n\n\n\nName\nCountry\nClub\nAge\nPosition\nRank\n\n\n\n\n1\nAlexia Putellas\nSpain\nBarcelona\n28\nMidfielder\n22\n\n\n2\nSam Kerr\nAustralia\nChelsea\n28\nForward\n2\n\n\n3\nVivianne Miedema\nNetherlands\nArsenal\n25\nForward\n3\n\n\n4\nCaroline Graham Hansen\nNorway\nBarcelona\n27\nMidfielder\n9\n\n\n5\nPernille Harder\nDenmark\nChelsea\n29\nForward\n4\n\n\n6\nCatarina Macario\nUnited States\nLyon\n22\nMidfielder\nNot ranked\n\n\n7\nMarie-Antoinette Katoto\nFrance\nParis Saint-Germain\n23\nForward\n19\n\n\n8\nJennifer Hermoso\nSpain\nPachuca\n32\nForward\n17\n\n\n9\nAitana Bonmati\nSpain\nBarcelona\n24\nMidfielder\nNot ranked\n\n\n10\nAda Hegerberg\nNorway\nLyon\n26\nForward\nNot ranked\n\n\n11\nWendie Renard\nFrance\nLyon\n31\nDefender\n11\n\n\n12\nChristiane Endler\nChile\nLyon\n30\nGoalkeeper\n30\n\n\n13\nMagdalena Eriksson\nSweden\nChelsea\n28\nDefender\n34\n\n\n14\nFran Kirby\nEngland\nChelsea\n29\nForward\n12\n\n\n15\nLieke Martens\nNetherlands\nParis Saint-Germain\n29\nForward\n28\n\n\n16\nLauren Hemp\nEngland\nManchester City\n21\nForward\nNot ranked\n\n\n17\nMapi Leon\nSpain\nBarcelona\n27\nDefender\nNot ranked\n\n\n18\nIrene Paredes\nSpain\nBarcelona\n30\nDefender\nNot ranked\n\n\n19\nRose Lavelle\nUnited States\nOL Reign\n27\nMidfielder\n15\n\n\n20\nBeth Mead\nEngland\nArsenal\n27\nForward\nNot ranked\n\n\n21\nDebinha\nBrazil\nNorth Carolina Courage\n30\nForward\n10\n\n\n22\nLindsey Horan\nUnited States\nLyon\n28\nMidfielder\n23\n\n\n23\nStina Blackstenius\nSweden\nArsenal\n26\nForward\nNot ranked\n\n\n24\nPatri Guijarro\nSpain\nBarcelona\n24\nMidfielder\nNot ranked\n\n\n25\nJi So-Yun\nSouth Korea\nSuwon FC\n31\nMidfielder\n18\n\n\n26\nKadeisha Buchanan\nCanada\nChelsea\n26\nDefender\n33\n\n\n27\nEllie Carpenter\nAustralia\nLyon\n22\nDefender\nNot ranked\n\n\n28\nAshley Lawrence\nCanada\nParis Saint-Germain\n27\nDefender\nNot ranked\n\n\n29\nAmandine Henry\nFrance\nLyon\n32\nMidfielder\n16\n\n\n30\nKim Little\nScotland\nArsenal\n31\nMidfielder\n39\n\n\n31\nLucy Bronze\nEngland\nBarcelona\n30\nDefender\n5\n\n\n32\nFridolina Rolfo\nSweden\nBarcelona\n28\nDefender\nNot ranked\n\n\n33\nTrinity Rodman\nUnited States\nWashington Spirit\n20\nForward\nNot ranked\n\n\n34\nJessie Fleming\nCanada\nChelsea\n24\nMidfielder\nNot ranked\n\n\n35\nKadidiatou Diani\nFrance\nParis Saint-Germain\n27\nForward\n36\n\n\n36\nAlex Morgan\nUnited States\nSan Diego Wave\n32\nForward\n38\n\n\n37\nSam Mewis\nUnited States\nKansas City Current\n29\nMidfielder\n1\n\n\n38\nMillie Bright\nEngland\nChelsea\n28\nDefender\nNot ranked\n\n\n39\nSara Dabritz\nGermany\nLyon\n27\nMidfielder\nNot ranked\n\n\n40\nBarbara Bonansea\nItaly\nJuventus\n31\nForward\nNot ranked\n\n\n41\nDelphine Cascarino\nFrance\nLyon\n25\nMidfielder\n21\n\n\n42\nCaroline Weir\nScotland\nFree agent\n26\nMidfielder\n25\n\n\n43\nAsisat Oshoala\nNigeria\nBarcelona\n27\nForward\n27\n\n\n44\nJess Fishlock\nWales\nOL Reign\n35\nMidfielder\nNot ranked\n\n\n45\nTabea Wassmuth\nGermany\nWolfsburg\n25\nForward\nNot ranked\n\n\n46\nLea Schuller\nGermany\nBayern Munich\n24\nForward\nNot ranked\n\n\n47\nLeah Williamson\nEngland\nArsenal\n25\nDefender\nNot ranked\n\n\n48\nCaitlin Foord\nAustralia\nArsenal\n27\nForward\nNot ranked\n\n\n49\nChristine Sinclair\nCanada\nPortland Thorns\n39\nForward\nNot ranked\n\n\n50\nJill Roord\nNetherlands\nWolfsburg\n25\nMidfielder\nNot ranked\n\n\n\n\n\n\n\n\nCode\n# Read in data\ntop50 = pd.read_csv(\"../data/top50_women_espn.csv\")\n# Convert all columns to strings (used for text later)\ntop50 = top50.astype(str)\ntop50.columns = [\"name\", \"country\", \"club\", \"age\", \"position\", \"rank\"]\ndef is_uk(country):\n    if country in [\"Scotland\", \"England\", \"Wales\"]: return \"United Kingdom\"\n    else: return country\ntop50[\"country2\"] = top50[\"country\"].apply(lambda x: is_uk(x))\n\n# Get summary stats per country\ntop50_2 = top50.copy()\n# Make age column an integer\ntop50_2[\"age\"] = top50_2[\"age\"].astype(int)\n# Make rank column an integer and replace not ranked with 0\ndef replace_not_ranked(string):\n    if string == \"Not ranked\": return np.nan\n    else: return int(string)\ntop50_2[\"rank\"] = top50_2[\"rank\"].apply(lambda x: replace_not_ranked(x))\nstats = top50_2.groupby([\"country2\"])[\"age\", \"rank\"].mean().reset_index()\nstats[\"age\"] = stats[\"age\"].round(1)\nstats[\"rank\"] = stats[\"rank\"].round(1).fillna(\"Not Ranked\")\nstats.columns = [\"country\", \"mean_age\", \"mean_rank\"]\n\n# Getting the number of players for each country\ncountry_counts = top50[\"country2\"].value_counts().reset_index()\ncountry_counts.columns = [\"country\", \"count\"]\n# Get country codes\ncodes = [\"GB\", \"ES\", \"US\", \"FR\", \"CA\", \"AU\", \"NL\", \"SE\", \"DE\", \"NO\", \"DK\", \"CL\", \"BR\", \"KR\", \"IT\", \"NG\"]\ncodes2 = [\"GBR\", \"ESP\", \"USA\", \"FRA\", \"CAN\", \"AUS\", \"NDL\", \"SWE\", \"DEU\", \"NOR\", \"DNK\", \"CHL\", \"BRA\", \"KOR\", \"ITA\", \"NGA\"]\n# Merge with count data frame and stats data frame\nmerged_counts = pd.merge(country_counts, stats)\nmerged_counts[\"code\"] = codes\nmerged_counts[\"code2\"] = codes2\nmerged_counts = merged_counts.rename(columns = {\"count\": \"counts\"})\n\n# Adding a text column with player information for each country\nmerged_counts[\"text\"] = \"\"\n# Loop through each country in the country count data\nfor i in range(len(merged_counts)):\n    # Set the current country\n    country = merged_counts.country[i]\n    # Add summary stats for that country\n    merged_counts.text[i] = \"SUMMARY STATS: \" + country.upper()+ \"<br>Number in the Top 50: \" + str(merged_counts.counts[i]) + \"<br>Mean Player Age: \" + str(merged_counts.mean_age[i]) + \"<br>Mean Player Ranking: \" + str(merged_counts.mean_rank[i])\n\n# Make a custom color map\ncolors = [\"#27297F\", \"#404E7E\", \"#405C7E\", \"#406C7E\", \"#40787E\", \"#407E78\", \"#407E6D\", \"#407E5A\", \"#437E40\"]\n\n# Create the choropleth trace\nchoropleth_trace = go.Choropleth(\n    locations = merged_counts[\"code2\"],\n    z = merged_counts[\"counts\"],\n    text = merged_counts[\"text\"],\n    colorscale = colors,\n    autocolorscale = False,\n    reversescale = True,\n    marker_line_color = \"black\",\n    marker_line_width = 0.5,\n    colorbar_title = \"Number of Players <br>in the Top 50\",\n    hovertemplate = \"<b>%{text}</b><br>\",\n    hoverinfo = \"name\",\n)\n# Create the figure\nglobe = go.Figure(data = [choropleth_trace])\nglobe.update_layout(\n    plot_bgcolor = \"#F1F0DA\",\n    paper_bgcolor = \"#F1F0DA\",\n    geo = dict(\n        projection_type = \"orthographic\",\n        showland = True,\n        landcolor = \"#9FC5AA\",\n        oceancolor = \"rgb(152, 190, 217)\",\n        showcountries = True,\n        showlakes = False,\n        showocean = True,\n        countrycolor = \"rgb(30, 56, 38)\",\n        lakecolor = \"rgb(135, 206, 250)\",\n        bgcolor = \"#F1F0DA\"\n    ),\n    title = \"Origin Countries of the Top 50 Players to <br>Watch Out for in the 2023 FIFA Women's World Cup\",\n    title_x = 0.5,\n    width = 900,\n    height = 700, \n    annotations=[\n        dict(\n            x = 0.5,\n            y = -0.05,\n            showarrow = False,\n            text = '<br>Data Source: \"ESPN FC Women\\'s Rank: The 50 best footballers in the world today\" [2]',\n            xref = \"paper\",\n            yref = \"paper\",\n            font = dict(\n                size = 12,\n                color = \"black\"\n            )\n        )\n    ]\n)\n# Show the figure\nglobe.show()\n\n\n\n\n                                                \nFigure 5: Locations of the Key Players Participating in the 2023 World Cup\n\n\n\nThis globe serves as a choropleth plot showing where the key players to watch out for come from. We can see that many of these top performing players come from the United Kingdom and will play on the Scottish, Welsh, and English teams in the upcoming World Cup. Spain and the United States are also home to several of these key players. By hovering over each country, we are able to see different summary statistics of the key players that call their respective country home. For example, of the six American players in ESPN’s list, the average age was around 26.3; meanwhile, of the six Spanish players in this list, the average age is around 27.5. It will be exciting to see how these key players perform in the upcoming World Cup. We hope to gain insight into how they will perform from the following visualizations.\n\n\nWinning Trends: Women’s World Cup Match Victories across Time\nNow that we have a glimpse into which countries and players will play a key role in this upcoming World Cup, let us look back into the winning trends historically for nations playing in the Women’s FIFA World Cups. In this visualization, we want to see if there are trends in the winning streaks for different teams over time. We are looking at 30 different national teams and which teams made it to the top 10 teams for the FIFA Women’s World Cup for the various years between 1991 and 2019. This visualization is animated, allowing us to see how the top 10 teams are changing in current time over said time period.\n\n\nCode\nimport warnings\nwarnings.simplefilter('ignore')\n\nimport numpy as np\nimport pandas as pd\nfrom raceplotly.plots import barplot\nimport plotly.io as pio\n\npio.renderers.default = \"plotly_mimetype+notebook_connected\"\n# read in the data\ndf_f = pd.read_csv(\"../data/kaggle_female_matches.csv\")\n# converting date\ndf_f['date']=pd.to_datetime(df_f['date'])\n# adding year\ndf_f['year'] = df_f['date'].dt.year\n# filter date\ndf_f_2019 = df_f[(df_f['year'] < 2020) & (df_f['tournament'] == 'FIFA World Cup')]\n# fix tie scores\ndf_f_2019['winner'] = np.where(df_f_2019['home_score'] == df_f_2019['away_score'], 'tie',\n                               np.where(df_f_2019['home_score'] > df_f_2019['away_score'], df_f_2019['home_team'],\n                                        df_f_2019['away_team']))\ndf_f_2019['win_ct'] = 1\ndf_f_2019 = df_f_2019[df_f_2019['winner']!='tie']\n\n# Create pivot table to get all possible combinations of year and winner\npivot_table = pd.pivot_table(df_f_2019,  index=['year'], values='win_ct', aggfunc=sum,columns=['winner'], fill_value=0)\n\n# Reshape the pivot table and reset the index to get the desired output format\noutput_df = pivot_table.stack().reset_index(name='win_ct')\n\n# Create bar race animation\nmy_raceplot = barplot(output_df,  \n                      item_column='winner', \n                      value_column='win_ct', \n                      time_column='year',\n                      top_entries=10)\n\n# Add labels and titles\nmy_raceplot.plot(item_label='Team',\n                 value_label=\"Women's FIFA World Cup Wins\",\n                 frame_duration=2000,\n                 title=\"Top 10 Women's FIFA World Cup Teams by Tournament Wins and Year\",\n                 time_label='Year:',)\nimport plotly.graph_objects as go\n\n# Modify the plot to add text in bottom right corner\nmy_raceplot.fig.update_layout(paper_bgcolor='#F1F0DA',plot_bgcolor = \"#F1F0DA\",height = 600,\nannotations=[\n        dict(\n            x = -0.08,\n            y = -0.45,\n            showarrow = False,\n            text = 'Data source: Kaggle [8]',\n            xref = \"paper\",\n            yref = \"paper\",\n            font = dict(\n                size = 12,\n                color = \"black\"\n            )\n        )\n    ]\n)\n\n#https://prod.liveshare.vsengsaas.visualstudio.com/join?ECC8F154DB9DEA0416B8B38B2DC029CC911A\n\n\n\n\n                                                \nFigure 6: Comparative Analysis of Women’s Team Victories Over Time\n\n\n\nAs expected, the results for 1991 and 2019 are incredibily different. This is also because the number of teams playing the FIFA Women’s World Cup in 1991 was significantly lower than the number of teams in 2019. In 1991 the last team is North Korea with 0 wins. This is due to there not being many teams in the 1991 tournement. By 1995, there already is an increase in the number of teams playing, and the plot no longer showing countries with 0 wins. A specific group of countries stays in the top 10, such as the United States, Norway, Germany, Sweden, Brazil, and China PR. There are changes in the position of these countries on the chart, with the United States and Norway staying in the top half and everything else changing. England also starts to make an appearance, as most of the stadiums the tournaments are being played in anticipation of the FIFA Women’s World Cup are in England.\nStarting with the 2000s, we see Germany moving up on the chart and staying in the top 5 until 2019. For the rest of the 2000s, quite a few countries, such as Ghana or Japan, appeared only for one year and disappeared. Finally, in 2007, we see England with only one win, but moving up on the chart and eventually ending up third in 2019. Given the final result for 2019, we see similar results to what we see nowadays. Again, the United States, Netherlands, England, Sweden, and Germany are in the top 5, followed by France and Italy. And finally, Australia, Brazil, and Norway tied with two wins.\nThis tool could be used to predict future growth, as club managers could use it to identify national teams from which they want to recruit players. It is also great for the national team’s strategic planning when deciding which players should start for which matches, or help betting agencies and people that want to bet on matches.\n\n\nPlayer Attributes: Comparing Performance at the 2019 Women’s World Cup\nWe imagine that taking a closer look into the most recent Women’s World Cup in 2019 will help provide insight into what we can expect this July, with most of the key players in ESPN’s FC rank list set to particpate. We took a subset of the data from the 2019 World Cup with the women who made it on ESPN’s list. A total of 13 players out of the 50 on the list scored during the 2019 World Cup. We will utilize the visualization below to compare their performance metrics when scoring their goals.\n\n\nCode\n# Load packages\nimport pandas as pd\nimport altair as alt\nimport numpy as np\nfrom datetime import datetime, time\n\n# Get the data\nstats = pd.read_csv(\"../data/wwc_2019_match_shots.csv\")\ntop50 = pd.read_csv(\"../data/top50_women_espn.csv\")\n\n# Make our custom color scheme\ncolor_scheme = ['#0099FF', '#009643', '#CB4349', '#FF818C', '#FCC92B', '#FD5109', '#CE6DD3','#FA8F38', '#8538B1', '#4983F8', '#A9DDD6', '#A2F17D', '#0C0582', '#960505']\n\n# Make a new minute timestamp column\nstats[\"timestamp_minute\"] = stats[\"minute\"] + stats[\"second\"]/60\nstats[\"timestamp_minute\"] = stats[\"timestamp_minute\"].apply(lambda x: round(x, 2))\n# Rename player column\nstats = stats.rename(columns = {\"player.name\": \"player_name\"})\n# Standardize Alex Morgan name\nstats[\"player_name\"] = stats[\"player_name\"].replace(\"Alexandra Morgan Carrasco\", \"Alex Morgan\")\n# Get the top 50 player names\ntop50_names = list(top50.Name)\n# Filter match data for only the players in top 50\nstats_top50 = stats[stats[\"player_name\"].isin(top50_names)].reset_index(drop = True)\n\n# Add selection fields\nselection = alt.selection_single(fields = [\"player_name\"], name = \"Random\")\n\n## UPPER LEFT BAR CHART - # goals per player\nbar1 = (alt.Chart(stats_top50)\n .mark_bar()\n .encode(y = \"count()\",\n         x = alt.X(\"player_name:N\",\n         sort = alt.EncodingSortField(field = \"timestamp_minute\", op = \"count\", order = \"ascending\"), axis = alt.Axis(labelAngle = 45)),\n         color = alt.condition(selection, alt.Color(\"player_name:N\", scale = alt.Scale(range = color_scheme), title = \"Player Name\"), alt.value(\"lightgray\"))\n).add_selection(selection\n).properties(\n    title = {\"text\": \"Number of 2019 World Cup Goals by Player\"}, \n    width = 450, \n    height = 225\n))\nbar1.encoding.x.title = \"Player Name\"\nbar1.encoding.y.title = \"Number of World Cup Goals\"\n\n# LOWER LEFT BAR CHART - # mean timestamp of player's goals\nbar2_intitial = (alt.Chart(stats_top50)\n .mark_bar()\n .encode(y = 'mean(timestamp_minute):Q',\n         x = alt.X('player_name:N',\n         sort = alt.EncodingSortField(field = \"timestamp_minute\", op = \"mean\", order = \"ascending\"), axis = alt.Axis(labelAngle = 45)),\n         color = alt.condition(selection, alt.Color(\"player_name:N\", scale = alt.Scale(range = color_scheme), title = \"Player Name\"), alt.value(\"lightgray\"))\n         #color = alt.condition(selection, alt.value(\"#009643\"), alt.value(\"lightgray\")))\n).add_selection(selection\n).properties(\n    title = {\"text\": \"Average Time These Players Scored\"}, \n    width = 450, \n    height = 225\n))\nbar2_intitial.encoding.x.title = \"Player Name\"\nbar2_intitial.encoding.y.title = \"Mean Time of Goal (min)\"\n\n\n# HALFTIME LINE AND OVERTIME HORIZONTAL LINES \nhalftime_text_h = alt.Chart(pd.DataFrame({\"y\": [47], \"text\": [\"Halftime\"]})).mark_text(color = \"#505050\",  align = \"left\").encode(x = alt.value(5), y = \"y\", text = \"text\")\novertime_text_h = alt.Chart(pd.DataFrame({\"y\": [92], \"text\": [\"Overtime\"]})).mark_text(color = \"#505050\",  align = \"left\").encode(x = alt.value(5), y = \"y\", text = \"text\")\nhalftime_h = alt.Chart(pd.DataFrame({\"y\": [45]})).mark_rule(color = \"#505050\").encode(y = \"y\")\novertime_h = alt.Chart(pd.DataFrame({\"y\": [90]})).mark_rule(color = \"#505050\").encode(y = \"y\")\n \nbar2 = alt.layer(bar2_intitial, halftime_h, overtime_h, halftime_text_h, overtime_text_h)\n\n# Add caption with data source\nbar2 = alt.concat(bar2).properties(title = alt.TitleParams(\n        [\" \", \" \", \"Data Source: ESPN FC Women's Rank 2022 Article [2] and Statsbomb [3]\"],\n        baseline = \"bottom\",\n        orient = \"bottom\",\n        anchor = \"end\",\n        fontWeight = \"normal\",\n        fontSize = 11\n    ))\n\n# HALFTIME LINE AND OVERTIME VERTICAL LINES \nhalftime_text_v = alt.Chart(pd.DataFrame({\"x\": [47], \"text\": [\"Halftime\"]})).mark_text(color = \"#505050\",  align = \"left\").encode(y = alt.value(5), x = \"x\", text = \"text\")\novertime_text_v = alt.Chart(pd.DataFrame({\"x\": [92], \"text\": [\"Overtime\"]})).mark_text(color = \"#505050\",  align = \"left\").encode(y = alt.value(5), x = \"x\", text = \"text\")\nhalftime_v = alt.Chart(pd.DataFrame({\"x\": [45]})).mark_rule(color = \"#505050\").encode(x = \"x\")\novertime_v = alt.Chart(pd.DataFrame({\"x\": [90]})).mark_rule(color = \"#505050\").encode(x = \"x\")\n \n\n## SCATTER PLOT 1\nscatter1_i = (alt.Chart(stats_top50)\n .mark_circle(size = 45)\n .encode(x = alt.X(\"timestamp_minute:Q\"),\n         y = \"TimeInPoss:Q\",\n         color = alt.condition(selection, alt.Color(\"player_name:N\", scale = alt.Scale(range = color_scheme), title = \"Player Name\"), alt.value(\"lightgray\"))\n  ).properties(\n    title = {\"text\": \"Possession Time Before Scoring by Player and Game Minute\"}, \n    width = 450, \n    height = 167\n))\nscatter1_i.encoding.x.title = \"Game Minute\"\nscatter1_i.encoding.y.title = \"Time in Possession (ms)\"\n\nscatter1 = alt.layer(scatter1_i, halftime_v, overtime_v, halftime_text_v, overtime_text_v)\n\n\n## SCATTER PLOT 2\nscatter2_i = (alt.Chart(stats_top50)\n .mark_circle(size = 45)\n .encode(x = alt.X(\"timestamp_minute:Q\"),\n         y = \"avevelocity:Q\",\n         color = alt.condition(selection, alt.Color(\"player_name:N\", scale=alt.Scale(range = color_scheme)), alt.value(\"lightgray\"))\n).properties(\n    title = {\"text\": \"Average Ball Velocity When Scoring by Player and Game Minute\"}, \n    width = 450, \n    height = 167\n))\nscatter2_i.encoding.x.title = \"Game Minute\"\nscatter2_i.encoding.y.title = \"Average Ball Velocity (m/s)\"\n\nscatter2 = alt.layer(scatter2_i, halftime_v, overtime_v, halftime_text_v, overtime_text_v)\n\n## SCATTER PLOT 3\nscatter3_i = (alt.Chart(stats_top50)\n .mark_circle(size = 45)\n .encode(x = alt.X(\"timestamp_minute:Q\"),\n         y = \"DistToGoal:Q\",\n         color = alt.condition(selection, alt.Color(\"player_name:N\", scale=alt.Scale(range = color_scheme)), alt.value(\"lightgray\"))\n).properties(\n    title = {\"text\": \"Distance to Goal When Scoring by Player and Game Minute\"}, \n    width = 450, \n    height = 167\n))\nscatter3_i.encoding.x.title = \"Game Minute\"\nscatter3_i.encoding.y.title = \"Distance to Goal (m)\"\n\nscatter3 = alt.layer(scatter3_i, halftime_v, overtime_v, halftime_text_v, overtime_text_v)\n\n\nbar1 & bar2 | scatter1 & scatter2 & scatter3\n\nchart1 = alt.vconcat(bar1 , bar2)\nchart2 = alt.vconcat(scatter1 , scatter2, scatter3)\nalt.hconcat(chart1, chart2, spacing = 5).configure(background = \"#F1F0DA\").configure_title(fontSize = 15) \n\n\n\n\n\n\nFigure 7: A Linked View of Key Player Performance Metrics at the 2019 World Cup\n\n\n\nThe first bar plot shows the total number 2019 World Cup goals scored for each of the players. We can see that the top three players with the most World Cup goals in 2019 were Vivianne Miedema, Alex Morgan, and Caroline Graham Hansen. The second bar plot shows the average time these players scored their goals by game minute. We can see which players scored earlier in the game and which players scored later in the game on average. Jill Rood, for example, scored her goals towards the end of the games.\nThe three scatter plots on the right are connected to these barplots. One can click on a player’s bar in the barplots on the left side and that player’s information will be highlighted in the three scatter plots on the right. These scatter plots show each player’s time in possession before their goals, the ball’s average velocity when scoring their goals, and the player’s distance to goal when scoring throughout a standard game’s time period (including overtime). To reiterate, this data is based off of the goals scored in the 2019 Women’s World Cup.\n\n\nField Stats: Shots & Outcomes at the 2019 Women’s World Cup Final\nBelow we see an innovative view of a modified scatter plot using matplotlib and plotly (not plotly express) where we creatively converted the coordinate plane into a football field. This view allows the audience to take a bird’s eye view into the actual shots taken during the last Women’s FIFA World Cup Final. Furthermore, the plot highlights how the offensive strategy taken by the US players contributed to their winning success compared to the shots taken by the Netherlands team.\nNow that we had the opportunity to view some player’s overall game statistics, especially Alex Morgan’s dominant presence, let’s look at some field statistics that specifically happened at the women’s FIFA World Cup Final in 2019 between the United States and Netherlands. The plot below shows a soccer field with the geo locations of shots taken amongst all players. The left side represents shots taken by players on the Netherlands team while the right side represents shots taken by US players. The outcome of those shots are also viewable by color. Options include “Blocked”, a shot that was stopped from continuing by a defender. “Goal”, a shot that was deemed to cross the goal-line by officials. “Off T”, a shot that’s initial trajectory ended outside the posts. The last outcome is “Saved”, a shot that was saved by the opposing team’s keeper. By hovering over the shots on the field, you can see even more statistics such as the player’s name, time the ball was in their possession, the minute of the game, the body part used to take that shot, and the distance they were from the goal.\n\n\nCode\nimport plotly.graph_objects as go\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import Rectangle\nimport seaborn as sns\nimport pandas as pd\n \n# read in the data\nshots = pd.read_csv(\"../data/shots.csv\")\nnet_shots = pd.read_csv(\"../data/net_shots.csv\")\n\n# subset the data\nus_shots = shots[['location.x','location.y','shot.outcome.name','player.name','shot.body_part.name','TimeInPoss','DistToGoal','minute']]\nnet_shots = net_shots[['location.x','location.y','shot.outcome.name','player.name','shot.body_part.name','TimeInPoss','DistToGoal','minute']]\n\n# subtract the x-coordinates from the maximum x-coordinate value to get mirror image on field\nnet_shots['location.x'] = 120 - net_shots['location.x']\n\n# join two dataframes\ndata_merge = pd.concat([us_shots,net_shots],axis=0) \n\n# round time in poss\ndata_merge['TimeInPoss'] = data_merge['TimeInPoss'].round()\ndata_merge['DistToGoal'] = data_merge['DistToGoal'].round()\n\n#009643 (green) #FF818C (pink) #F1F0DA (cream) #0099FF (blue) #FCC92B (yellow) #FD5109 (orange) \n\nfig = go.Figure()\n#create traces\nfig.add_trace(\n    go.Scatter(\n        x=data_merge[data_merge['shot.outcome.name'] == 'Goal']['location.x'],\n        y=data_merge[data_merge['shot.outcome.name'] == 'Goal']['location.y'],\n        name='Goal',\n        mode='markers',\n        marker_color='#FF818C',\n        customdata=data_merge[data_merge['shot.outcome.name'] == 'Goal'][['player.name', 'TimeInPoss', 'DistToGoal','minute']],\n        text=data_merge[data_merge['shot.outcome.name'] == 'Goal']['shot.body_part.name'],\n        hovertemplate='<br><br>Player: %{customdata[0]}<br>Time in Possession (ms): %{customdata[1]}<br>Distance to goal (m): %{customdata[2]}<br>Body part: %{text}<br>Game minute: %{customdata[3]}'\n    )\n)\nfig.add_trace(go.Scatter(\n    x=data_merge[data_merge['shot.outcome.name'] == 'Off T']['location.x'], \n    y=data_merge[data_merge['shot.outcome.name'] == 'Off T']['location.y'],    \n    name='Off T',\n    mode='markers',\n    marker_color='#0099FF',\n    customdata=data_merge[data_merge['shot.outcome.name'] == 'Off T'][['player.name', 'TimeInPoss', 'DistToGoal','minute']],\n    text=data_merge[data_merge['shot.outcome.name'] == 'Off T']['shot.body_part.name'],\n    hovertemplate='<br><br>Player: %{customdata[0]}<br>Time in Possession (ms): %{customdata[1]}<br>Distance to goal (m): %{customdata[2]}<br>Body part: %{text}<br>Game minute: %{customdata[3]}'\n    ))\nfig.add_trace(go.Scatter(\n    x=data_merge[data_merge['shot.outcome.name'] == 'Blocked']['location.x'], \n    y=data_merge[data_merge['shot.outcome.name'] == 'Blocked']['location.y'],    \n    name='Blocked',\n    mode='markers',\n    marker_color='#FCC92B',\n    customdata=data_merge[data_merge['shot.outcome.name'] == 'Blocked'][['player.name', 'TimeInPoss', 'DistToGoal','minute']],\n        text=data_merge[data_merge['shot.outcome.name'] == 'Blocked']['shot.body_part.name'],\n        hovertemplate='<br><br>Player: %{customdata[0]}<br>Time in Possession (ms): %{customdata[1]}<br>Distance to goal (m): %{customdata[2]}<br>Body part: %{text}<br>Game minute: %{customdata[3]}'\n    ))\nfig.add_trace(go.Scatter(\n    x=data_merge[data_merge['shot.outcome.name'] == 'Saved']['location.x'], \n    y=data_merge[data_merge['shot.outcome.name'] == 'Saved']['location.y'],    \n    name='Saved',\n    mode='markers',\n    marker_color='#FD5109',\n    customdata=data_merge[data_merge['shot.outcome.name'] == 'Saved'][['player.name', 'TimeInPoss', 'DistToGoal','minute']],\n        text=data_merge[data_merge['shot.outcome.name'] == 'Saved']['shot.body_part.name'],\n        hovertemplate='<br><br>Player: %{customdata[0]}<br>Time in Possession (ms): %{customdata[1]}<br>Distance to goal (m): %{customdata[2]}<br>Body part: %{text}<br>Game minute: %{customdata[3]}'\n    ))\n\n\n# update traces\nfig.update_traces(mode='markers', marker_size=12,marker_line_width=0.5)\n\n# update layout\nfig.update_layout(plot_bgcolor='#009643', \n                xaxis=dict(gridcolor='#009643',range=[0, 120],showticklabels=False), \n                height=600,\n                width=800,\n                paper_bgcolor='#F1F0DA',\n                yaxis=dict(range=[0, 80], gridcolor='#009643',showticklabels=False),\n                annotations=\n                [dict(x=0.5,y=1.15,xref='paper',yref='paper',text='Shot Locations and Outcomes',showarrow=False,\n                font=dict(family='Arial',size=18,color='black')),\n                dict(x=0.5,y=1.08,xref='paper',yref='paper',text=\"Women's World Cup 2019 - USA vs Netherlands\",showarrow=False,\n                font=dict(family='Arial',size=14,color='black')),\n                dict(x=0.1,y=-0.10,xref='paper',yref='paper',text='Netherlands Team',showarrow=False,\n                font=dict(family='Arial',size=18,color='black')),\n                dict(x=0.9,y=-0.10,xref='paper',yref='paper',text='United States Team',showarrow=False,\n                font=dict(family='Arial',size=18,color='black')),\n                dict(x=1.16,y=-0.18,xref='paper',yref='paper',text='Data source: StatsBomb [3]',showarrow=False,\n                font=dict(family='Arial',size=10,color='black'))\n                ])\n\n# add shapes\nfig.add_shape(type='line', x0=60, y0=0, x1=60, y1=80, line=dict(color='white', width=0.6))\nfig.add_shape(type='rect',\n              x0=0, y0=0, x1=120, y1=80,\n              line=dict(color='white', width=0.5))\nfig.add_shape(type='rect',\n              x0=0, y0=0, x1=60, y1=80,\n              line=dict(color='white', width=0.6))\nfig.add_shape(type='rect',\n              x0=0, y0=18, x1=18, y1=62,\n              line=dict(color='white', width=0.6))\nfig.add_shape(type='rect',\n              x0=102, y0=18, x1=120, y1=62,\n              line=dict(color='white', width=0.6))\nfig.add_shape(type='rect',\n              x0=0, y0=30, x1=6, y1=50,\n              line=dict(color='white', width=0.6))\nfig.add_shape(type='rect',\n              x0=114, y0=30, x1=120, y1=50,\n              line=dict(color='white', width=0.6))\nfig.add_shape(type='rect',\n              x0=0, y0=36, x1=0.5, y1=44,\n              line=dict(color='white', width=0.6))\nfig.add_shape(type='rect',\n              x0=120, y0=36, x1=119.5, y1=44,\n              line=dict(color='white', width=0.6))\n\nfig.add_shape(type='circle',\n              x0=49, y0=29, x1=71, y1=50,\n              line=dict(color='white', width=0.6)\n             )\n\nfig.show()\n\n\n\n\n                                                \nFigure 8: Overview of Shots and Outcomes at the 2019 Women’s World Cup Final\n\n\n\nOverall, the plot clearly shows that more shots were taken by US players than Netherland’s players. You can also see that no shots on the Netherland’s side resulted in a goal while two shots taken by US players resulted in a goal. This is in line with the final score of the game 2-0 (US vs Netherlands).\nAn interesting observation was that the majority of the Netherland’s players who took a shot had very little time with the ball compared to US players. On average, Netherlands players who took a shot were in possession of the ball for only 9 ms while US players were in possession of the ball for 23 ms on average. Most notably, Alex Morgan who took a shot that ended up outside the posts had the longest possession of the ball. Because Alex Morgan is a prominent US soccer player, visualizing her moves on the field is key. For this game, she shot with her left foot every time, and always in the second half of the game. In fact, although no shot of hers results in a goal, Alex Morgan made up over a quarter of all shots taken during the final; a very high percentage and indicative of her impressive skills on the field.\nWith this plot in mind, we are excited to see what the 2023 World Cup final has in store. Which team will ultimately take the crown as the 2023 Women’s FIFA champions?"
  },
  {
    "objectID": "index.html#conclusion",
    "href": "index.html#conclusion",
    "title": "A Visual Journey through the Women’s FIFA World Cup",
    "section": "Conclusion",
    "text": "Conclusion\n\nSummary of Plots\nWe began this analysis by looking into which terms are the most associated with the FIFA World Cup. However, the main terms appear to be associated more with men’s FIFA. Therefore, we decided to explore the differences between funding men’s and women’s FIFA World Cup based on attendance. Although total men’s FIFA attendance is higher, men’s and women’s FIFA are closer when looking at the average and highest attendance. Based on average and highest attendance, there exists a massive discrepancy between the genders. Furthermore, we wanted to see if the financial difference reflected in the tournament over the years. Thus, Figure 3 depicts individual teams’ development and potential for growth. Knowing the rankings over the years, we looked into how the financial discrepancies affect the venues for different tournaments. Based on the four main women’s tournaments, it was found that when it comes to the location of the stadiums, there is a trend that many of the football stadiums that host women’s tournaments are located close to large cities. This is likely due to the lack of funds to afford the venue since we know from Figure 2 that it is not due to low attendance.\nLooking back at our first figure, the plot showed Mbappé to be one of the terms most associated with FIFA, which according to Forbes, is the highest-paid football player in the world 1. Therefore, we decided to look into the key female players heading into this next World Cup. Figure 5 shows an interactive globe to discover where the key female players come from. Alex Morgan, who is ranked 38th and plays for the United States, has become very well known due to her talent in recent years. We can explore more of her skills in Figure 6 by seeing how many goals she scored in the 2019 World Cup, when she typically scores her goals throughout a game, and more.\n\n\nFinal Thoughts\nDespite the women’s World Cup being the world’s largest women’s sporting tournament, finding concise information and digestible visualizations is extremely challenging compared to men’s football. Therefore, this analysis hopes to catalyze an investigation into the world of women’s football and visually explore its essential aspects. All of the visualizations can be helpful tools for team managers, betting agencies, or football fans that want to explore previous trends and predict the trends for the women’s FIFA World Cup 2023. We explored with this analysis the strengths and weaknesses of different teams, players, and tournaments, as well as the overall financial discrepancy in the men’s and women’s FIFA tournaments. We hope that your main takeaway from this analysis is how underrated, underfunded, and under-analyzed women’s football. In the next couple of years, we hope that the coverage and spending for women’s football will increase. Currently, it does seem as if FIFA is trying to increase coverage of the women’s World Cup. In fact, in 2021, they finally published their first ever analysis of the landscape that is women’s football 7. With trends showing the growth that women’s football has made in the past 20+ years, one can hope that there will no longer exist a discrepancy between the men’s and women’s football in the future."
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "A Visual Journey through the Women’s FIFA World Cup",
    "section": "References",
    "text": "References\n[1] Birnbaum, J. (2022, October 7). The World’s Highest-Paid Soccer Players 2022: Kylian Mbappé Claims No. 1 While Erling Haaland Debuts. Forbes. https://www.forbes.com/sites/justinbirnbaum/2022/10/07/the-worlds-highest-paid-soccer-players-2022-kylian-mbapp-claims-no-1-while-erling-haaland-debuts/?sh=360a1ee8629d\n[2] “ESPN FC Women’s Rank: The 50 Best Footballers in the World Today.” ESPN, ESPN Internet Ventures, 27 June 2022, https://www.espn.com/soccer/blog-espn-fc-united/story/4685632/espn-fc-womens-rank-the-50-best-footballers-in-the-world-today.\n[3] StatsBomb. (2023, April 11). StatsBomb data: Event data. StatsBomb. Retrieved April 24, 2023, from https://statsbomb.com/what-we-do/hub/free-data/\n[4] Wikipedia. (2023, April 16). Latitude and longitude of cities. Wikipedia. Retrieved April 24, 2023, from https://en.wikipedia.org/wiki/Geographic_coordinate_system\n[5] Twitter. (2019). Get Twitter API. Twitter. Retrieved April 24, 2023, from https://api.twitter.com/2/tweets\n[6] FIFA. (2022). Finances. Retrieved April 24, 2023, from https://www.fifa.com/about-fifa/organisation/finances\n[7] FIFA. (2022, March 22). FIFA publishes first-ever comprehensive analysis of the elite women’s football landscape. FIFA.com. https://www.fifa.com/media-releases/fifa-publishes-first-ever-comprehensive-analysis-of-the-elite-women-s-football-l\n[8] Jürisoo, M. (2022, August 1). Women’s international football results. Kaggle. Retrieved April 24, 2023, from https://www.kaggle.com/datasets/martj42/womens-international-football-results\n[9] Published by Statista Research Department, & 18, J. (2023, January 18). Highest paid footballers worldwide 2022. Statista. Retrieved May 2, 2023, from https://www.statista.com/statistics/266636/best-paid-soccer-players-in-the-2009-2010-season/#:~:text=As%20of%20December%202022%2C%20Cristiano,dollars%20in%20off%2Dfield%20income.\n[10] Gorostieta, D. (2023, March 14). Who are the highest-paid women’s soccer players in the world? Diario AS. Retrieved May 2, 2023, from https://en.as.com/soccer/who-are-the-highest-paid-womens-soccer-players-in-the-world-n/"
  },
  {
    "objectID": "index.html#appendix",
    "href": "index.html#appendix",
    "title": "A Visual Journey through the Women’s FIFA World Cup",
    "section": "Appendix",
    "text": "Appendix\n\nOur Color Scheme\nWe crafted our color palette based of the 2023 FIFA World Cup colors seen at the top of this webpage. Below is the exact color palette used throughout our visualizations. We picked and chose colors from this palette on a case by case basis depending on whether a plot required a discrete or continuous color palette in addition to how many colors where needed overall for a plot."
  }
]